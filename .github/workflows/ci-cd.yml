name: CI-CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Log in to Docker registry
        uses: docker/login-action@v2
        with:
          registry: registry.digitalocean.com
          username: ${{ secrets.DO_REGISTRY_USERNAME }}
          password: ${{ secrets.DO_REGISTRY_PASSWORD }}

      - name: Build and push api-gateway image
        run: |
          docker build -t registry.digitalocean.com/hive-services-registry/api-gateway:${{ github.sha }} ./apps/api-gateway/
          docker push registry.digitalocean.com/hive-services-registry/api-gateway:${{ github.sha }}

      - name: Build and push service-user image
        run: |
          docker build -t registry.digitalocean.com/hive-services-registry/service-user:${{ github.sha }} ./apps/service-user/
          docker push registry.digitalocean.com/hive-services-registry/service-user:${{ github.sha }}

      - name: Build and push service-llm-hives image
        run: |
          docker build --build-arg OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} -t registry.digitalocean.com/hive-services-registry/service-llm-hives:${{ github.sha }} ./apps/service-llm-hives/
          docker push registry.digitalocean.com/hive-services-registry/service-llm-hives:${{ github.sha }}

      - name: Build and push service-llm-responses image
        run: |
          docker build --build-arg OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }} -t registry.digitalocean.com/hive-services-registry/service-llm-responses:${{ github.sha }} ./apps/service-llm-responses/
          docker push registry.digitalocean.com/hive-services-registry/service-llm-responses:${{ github.sha }}

      - name: Set up kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Configure kubeconfig
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > $HOME/.kube/config

      - name: Update Kubernetes manifests with new image tags
        run: |
          sed -i "s|registry.digitalocean.com/hive-services-registry/api-gateway:.*|registry.digitalocean.com/hive-services-registry/api-gateway:${{ github.sha }}|g" ./k8s/api-gateway-deployment.yaml
          sed -i "s|registry.digitalocean.com/hive-services-registry/service-user:.*|registry.digitalocean.com/hive-services-registry/service-user:${{ github.sha }}|g" ./k8s/service-user-deployment.yaml
          sed -i "s|registry.digitalocean.com/hive-services-registry/service-llm-hives:.*|registry.digitalocean.com/hive-services-registry/service-llm-hives:${{ github.sha }}|g" ./k8s/service-llm-hives-deployment.yaml
          sed -i "s|registry.digitalocean.com/hive-services-registry/service-llm-responses:.*|registry.digitalocean.com/hive-services-registry/service-llm-responses:${{ github.sha }}|g" ./k8s/service-llm-responses-deployment.yaml

      - name: Apply Kubernetes manifests
        run: kubectl apply -f ./k8s

      - name: Rollout restart deployments
        run: |
          kubectl rollout restart deployment api-gateway
          kubectl rollout restart deployment service-user
          kubectl rollout restart deployment service-llm-hives
          kubectl rollout restart deployment service-llm-responses

      - name: Verify pods status
        run: kubectl get pods

      - name: Build and push K6 load test image
        run: |
          docker build -t registry.digitalocean.com/hive-services-registry/k6-loadtest:${{ github.sha }} ./apps/service-llm-hives/k6
          docker push registry.digitalocean.com/hive-services-registry/k6-loadtest:${{ github.sha }}

      - name: Run K6 load test jobs
        run: |
          set -euo pipefail
          for test in create-hive-loadtest get-hive-by-id-loadtest get-hives-loadtest update-hive-by-id-loadtest; do
            echo "============================="
            echo "Running K6 test: $test"
            echo "============================="

            # Clean up old job if it exists
            echo "Deleting existing job (if any)..."
            kubectl delete job k6-$test --ignore-not-found

            # Create job YAML on-the-fly and apply it
            echo "Applying job to Kubernetes cluster..."
            cat <<EOF | tee job.yaml | kubectl apply -f -
          apiVersion: batch/v1
          kind: Job
          metadata:
            name: k6-$test
          spec:
            template:
              spec:
                containers:
                - name: k6
                  image: registry.digitalocean.com/hive-services-registry/k6-loadtest:${{ github.sha }}
                  command: ["k6", "run", "/tests/$test.js"]
                restartPolicy: Never
            backoffLimit: 0
          EOF

            echo "Waiting for job completion..."
            kubectl wait --for=condition=complete --timeout=300s job/k6-$test || {
              echo "❌ Job did not complete in time. Describing job/pod..."
              kubectl describe job k6-$test
              kubectl get pods -l job-name=k6-$test -o wide
              POD_NAME=$(kubectl get pods -l job-name=k6-$test -o jsonpath='{.items[0].metadata.name}')
              echo "Describing pod: $POD_NAME"
              kubectl describe pod $POD_NAME
              echo "Pod logs:"
              kubectl logs $POD_NAME || echo "Failed to fetch logs"
              exit 1
            }

            echo "✅ Logs for test $test:"
            kubectl logs job/k6-$test || echo "Failed to fetch job logs"

          done
